<% content_for :stylesheets do %><%= stylesheet_link_tag 'edit_app' %><% end %>
<% content_for :javascripts do %><%= javascript_include_tag 'edit_area/edit_area_loader' %><% end %>




  <div id="main_column">
  <% form_for(@app) do |f| %>

    <%= f.error_messages %>

    <div id="changes" class="off"></div>
    <div id="editor_container" class="<%= @app.new_record? ? 'without' : 'with' %>_slider">

      <% unless @app.new_record? %>
        <a id="save_button" class="button small off" href="javascript:save();">save</a>
        <div id="commit_slider" class="without_changes">
          <!-- <img src="/images/star.png" onclick="alert('ho');" style="position: relative; left: 20px; top: -3px">-->
        </div>
      <% end %>

      <%= f.text_area :code %>
    </div>

    <% if @app.new_record? %>
      <p><%= f.submit "Deploy", :class => "button" %></p>
    <% end %>

  <% end %>
  </div>

  <div id="sidebar">

    <% unless @app.new_record? %>
      <%= render :partial => "boxes/app_info" if signed_in? or @app.name %>

      <%= render :partial => "boxes/authenticate" unless signed_in? %>

      <%= render :partial => "boxes/app_name" unless @app.name %>

      <p>Deployed to <a href="<%= @app.uri %>"><%= @app.uri %></a></p>

    <p><a class="button" href="/apps/<%= @app.id %>/fork" %>Fork this app</a></p>

    <p><a class="button" href="/apps/<%= @app.id %>/deploy" %>Deploy</a></p>
    <% end %>

  </div>


<script language="Javascript" type="text/javascript">
	// initialisation
	editAreaLoader.init({
		id: "app_code"	// id of the textarea to transform		
		,start_highlight: true	// if start with highlight
		,allow_resize: "no"
    ,toolbar: ""
		,allow_toggle: false
		,language: "en"
		,syntax: "ruby"	
    ,replace_tab_by_spaces: 2
    ,keypress_callback: 'handle_change'
    ,EA_init_callback: 'remember_code'
	});

  var last_saved_code = null;
  function remember_code(id) {
    last_saved_code = editAreaLoader.getValue('app_code')
  }

  function handle_change(id) {
    if (!editing) return;
    schedule_or_delay_a_save();
  }

  var save_timeout = null;
  function schedule_or_delay_a_save() {
    if (save_timeout != null) {
      clearTimeout(save_timeout);
    }

    save_timeout = setTimeout(autosave, 2000);
  }

  var saving = false;
  var original_code = document.getElementById("app_code").value;
  function autosave() {
    if (saving) {
      schedule_or_delay_a_save();
    } else {
      if (editAreaLoader.getValue('app_code') != last_saved_code) {
        saving = true;
        make_save_request();
        last_saved_code = editAreaLoader.getValue('app_code');
      }
      clearTimeout(save_timeout);
    }
  }

  function make_save_request() {
     new Ajax.Request('/apps/<%= @app.id %>/files/app.rb', 
      { 
        method:'put',
        parameters: 
          {
            "authenticity_token":"<%= form_authenticity_token %>",
            "app_code":editAreaLoader.getValue('app_code')
          },
        onSuccess: function(transport) {
          saving = false;
          set_slider_size(transport.responseJSON.commit_count-1);
          set_num_changes(transport.responseJSON.changes_since_last_full_commit);
        },
        onFailure: function() { alert("fail!"); }
      });   
  }

  var loading = false;
  var reload_when_finished = false;
  var commit_index_to_load;
  var revisions = new Array();
  function load_commit(index) {
    if (loading) {
      reload_when_finished = true;
      commit_index_to_load = index;
    } else {
      if (revisions[index]) {
        set_code(revisions[index]);
        return;
      }
      loading = true;
      new Ajax.Request('/apps/<%= @app.id %>/commits/' + index, 
        { 
          method:'get',
          onSuccess: function(transport) {
            loading = false;
            revisions[transport.responseJSON.index] = transport.responseJSON.text
            set_code(transport.responseJSON.text);
            if (reload_when_finished) {
              load_commit(commit_index_to_load);
              reload_when_finished = false;
            }
          },
          onFailure: function() { alert("fail!"); }
        }); 
    }
  }

  function set_code(code) {
    editAreaLoader.setValue('app_code', '');
    editAreaLoader.setValue('app_code', code);
    original_code = code
  }

  var num_changes;
  function set_num_changes(num) {
    num_changes = num;
    var changes = (num > 0)
    $j("#commit_slider").toggleClass('with_changes', changes);
    $j("#commit_slider").toggleClass('without_changes', !changes);
    $j("#changes").html(num + " changes!");
    $j("#changes").toggleClass('off', !changes);
    $j("#save_button").toggleClass('off', !changes);
  }

  function set_slider_size(num) {
    $j("#commit_slider").slider('option', 'max', num);
  }

  function save() {
    var msg = prompt("What are you saving?");
    new Ajax.Request('/apps/<%= @app.id %>/commits', 
    { 
      method:'post',
      parameters: {
        'message': msg,
        'authenticity_token':'<%= form_authenticity_token %>'
      },
      onSuccess: function(transport) {
        set_num_changes(0);
      },
      onFailure: function() { alert("fail!"); }
    });   
  }

  function initialize_slider() {
    new Ajax.Request('/apps/<%= @app.id %>/commits', 
    { 
      method:'get',
      onSuccess: function(transport) {
        set_num_changes(transport.responseJSON.changes_since_last_full_commit);
        set_slider_size(transport.responseJSON.total_changes-1);
      },
      onFailure: function() { alert("fail!"); }
    });
  }

<% unless @app.new_record? %>

  $j(document).ready(function(){
    $j("#commit_slider").slider(
      {
        min: 0, 
        max: <%= @app.commits.count-1 %>,
        value: <%= @app.commits.count-1 %>,
        slide: function(event, ui) {
          load_commit(ui.value);
        }
      }
    );
  });
<% end %>

  var editing = <%= @app.owner == current_user %>;
  initialize_slider();

</script>

